-- MySQL Script generated by MySQL Workbench
-- Mon 16 Jul 2018 07:02:14 PM EDT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;
-- -----------------------------------------------------
-- Table `mydb`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies` (
  `movies_id` INT NOT NULL AUTO_INCREMENT,
  `poster_path` VARCHAR(80) NULL,
  `release_date` VARCHAR(20) NULL,
  `original_title` VARCHAR(45) NULL,
  `popularity` VARCHAR(45) NULL,
  PRIMARY KEY (`movies_id`))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`users` (
  `users_id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `joined_at` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `bio` VARCHAR(280) NULL,
  `profile_pic_path` VARCHAR(45) NULL,
  PRIMARY KEY (`users_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`playlist` (
  `playlist_id` INT NOT NULL AUTO_INCREMENT,
  `url` VARCHAR(80) NULL,
  `users_users_id` INT NOT NULL,
  PRIMARY KEY (`playlist_id`),
  INDEX `fk_playlist_users1_idx` (`users_users_id` ASC),
  CONSTRAINT `fk_playlist_users1`
    FOREIGN KEY (`users_users_id`)
    REFERENCES `mydb`.`users` (`users_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`movies_playlists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`movies_playlists` (
  `movies_movies_id` INT NOT NULL,
  `playlist_playlist_id` INT NOT NULL,
  PRIMARY KEY (`movies_movies_id`, `playlist_playlist_id`),
  INDEX `fk_movies_has_playlist_playlist1_idx` (`playlist_playlist_id` ASC),
  INDEX `fk_movies_has_playlist_movies_idx` (`movies_movies_id` ASC),
  CONSTRAINT `fk_movies_has_playlist_movies`
    FOREIGN KEY (`movies_movies_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_has_playlist_playlist1`
    FOREIGN KEY (`playlist_playlist_id`)
    REFERENCES `mydb`.`playlist` (`playlist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `mydb`.`watched`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`watched` (
  `movies_movies_id` INT NOT NULL,
  `users_users_id` INT NOT NULL,
  PRIMARY KEY (`movies_movies_id`, `users_users_id`),
  INDEX `fk_movies_has_users_users1_idx` (`users_users_id` ASC),
  INDEX `fk_movies_has_users_movies1_idx` (`movies_movies_id` ASC),
  CONSTRAINT `fk_movies_has_users_movies1`
    FOREIGN KEY (`movies_movies_id`)
    REFERENCES `mydb`.`movies` (`movies_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movies_has_users_users1`
    FOREIGN KEY (`users_users_id`)
    REFERENCES `mydb`.`users` (`users_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;